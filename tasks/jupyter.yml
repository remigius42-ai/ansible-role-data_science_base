---
- name: Generate Jupyter config
  command: '{{ anaconda_bin_path }}/jupyter notebook --generate-config --allow-root'
  # allow root prevents issues when testing with docker, if the container user is root
  args:
    creates: '{{ ansible_env.HOME }}/.jupyter/jupyter_notebook_config.py'

- name: Allow external hosts on Jupyter
  lineinfile:
    path: '{{ ansible_env.HOME }}/.jupyter/jupyter_notebook_config.py'
    regexp: '#c\.NotebookApp\.ip = ''localhost'''
    backrefs: 'yes'
    line: 'c.NotebookApp.ip = ''0.0.0.0'''
    backup: 'yes'

- name: Workaround - Install parso==0.1.0 for jupyter_contrib_nbextensions which conda seems unable to resolve
  become: 'yes'
  pip:
    name: 'parso==0.1.0'
    executable: '{{ anaconda_bin_path }}/pip'

- name: Install jupyter_contrib_nbextensions for pep8 and spell checking
  become: 'yes'
  command: '{{ anaconda_bin_path }}/conda install -c conda-forge -y jupyter_contrib_nbextensions'
  args:
    creates: '{{ anaconda_bin_path }}/jupyter-contrib-nbextension'

- name: Install autopep8 for pep8 checking with jupyter_contrib_nbextensions
  become: 'yes'
  pip:
    name: autopep8
    executable: '{{ anaconda_bin_path }}/pip'

- name: Ensure configuration directory for jupyter_contrib_nbextensions exists
  file:
    path: '{{ ansible_env.HOME }}/.jupyter/nbconfig'
    state: directory
    mode: 0755

- name: Configure jupyter_contrib_nbextensions
  copy:
    src: files/jupyter_nbconfig_notebook.json
    dest: '{{ ansible_env.HOME }}/.jupyter/nbconfig/notebook.json'

- name: Copy jupyter save hooks
  blockinfile:
    path: '{{ ansible_env.HOME }}/.jupyter/jupyter_notebook_config.py'
    block: |
      {{ lookup('file', 'files/jupyter_save_hooks.py') }}

      c.FileContentsManager.pre_save_hook = jupyter_pre_save_hook

# - name: Enable jupyter save hooks
#   blockinfile:
#     path: '{{ ansible_env.HOME }}/.jupyter/jupyter_notebook_config.py'
#     block: |
#       import jupyter_save_hooks.py
#       c.FileContentsManager.pre_save_hook = jupyter_save_hooks.pre_save_hook

- name: Install nbdime for diff and merge of notebooks
  become: 'yes'
  pip:
    name: nbdime
    executable: '{{ anaconda_bin_path }}/pip'

- name: Check if /etc/gitattributes exists
  stat:
    path: /etc/gitattributes
  register: data_science_base_system_gitattributes

- name: Check if nbdime is already enabled system-wide
  lineinfile:
    regexp: '^\*\.ipynb\s+diff=jupternotebook'
    line: 'line is not going to be actually replaced, only checked'
    dest: /etc/gitattributes
    state: absent
  check_mode: 'yes'
  register: data_science_base_nbdime_not_enabled
  when: data_science_base_system_gitattributes.stat.exists

- name: Activate nbdime system-wide
  become: 'yes'
  command: '{{ anaconda_bin_path }}/nbdime config-git --enable --system'
  when: not data_science_base_system_gitattributes.stat.exists or data_science_base_nbdime_not_enabled.changed
  tags:
    - skip_ansible_lint

- name: Install RISE for live Jupyter notebook presentations
  become: 'yes'
  command: '{{ anaconda_bin_path }}/conda install -c damianavila82 -y rise'
  args:
    creates: '{{ anaconda_bin_path}}/../pkgs/rise-*-py*/'
